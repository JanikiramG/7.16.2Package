namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: TempAccessProxyDtoSchema

	/// <exclude/>
	public class TempAccessProxyDtoSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public TempAccessProxyDtoSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public TempAccessProxyDtoSchema(TempAccessProxyDtoSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("04544653-713e-4c63-ac57-d9a457053d3c");
			Name = "TempAccessProxyDto";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("f214e3c2-8cc2-4e62-be3f-96a9b4832c80");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,173,86,219,110,226,48,16,125,110,165,254,195,104,251,176,221,23,242,190,32,164,21,208,10,105,181,66,45,124,128,155,76,194,104,19,39,107,59,85,17,234,191,239,56,23,55,80,2,132,240,4,118,230,114,236,153,51,199,82,36,168,51,225,35,44,81,41,161,211,208,12,38,169,12,41,202,149,48,148,202,193,236,221,160,146,34,254,229,251,168,245,66,248,127,69,132,119,183,219,187,219,155,92,147,140,224,101,163,13,38,195,189,53,71,137,99,244,109,8,61,120,66,137,138,124,182,97,171,123,133,17,239,194,36,22,90,255,228,31,66,105,158,81,167,185,226,12,133,137,231,121,48,210,121,146,8,181,25,87,235,210,14,84,109,8,1,106,95,81,86,128,172,125,188,134,83,150,191,198,228,131,111,211,124,205,114,179,45,50,57,52,11,149,102,168,12,33,67,90,20,158,229,247,125,40,197,198,19,26,13,169,2,109,127,205,26,57,73,1,142,130,129,243,241,246,157,70,111,34,206,209,45,151,45,110,159,86,213,1,180,81,246,90,203,19,204,3,216,66,132,102,104,115,15,225,163,11,72,201,181,134,52,108,0,238,134,246,168,255,113,216,127,172,235,197,192,171,107,90,61,207,47,186,222,93,191,227,64,87,138,122,224,204,181,73,19,84,92,80,14,69,33,241,223,135,201,124,250,163,35,236,51,194,180,158,162,242,237,211,39,142,98,221,96,31,114,251,2,243,55,105,51,154,189,103,164,196,107,140,53,31,231,50,76,199,224,216,121,8,250,61,202,160,164,106,177,46,119,247,54,247,38,203,193,52,173,243,197,89,187,131,0,241,28,3,30,122,182,10,34,6,98,247,211,147,166,37,235,117,231,141,131,152,75,250,151,151,212,236,78,230,51,250,169,31,113,3,210,89,44,54,23,192,107,241,108,131,57,45,205,251,161,117,151,138,69,9,173,176,192,106,57,129,64,24,132,7,10,65,200,13,171,14,203,97,66,18,131,142,172,110,4,181,1,143,29,106,202,223,151,196,71,153,57,31,187,117,37,90,188,172,83,197,58,98,155,218,108,42,85,57,70,140,233,167,206,90,18,84,142,78,187,44,41,190,121,227,147,188,104,77,219,139,25,147,90,65,235,73,217,82,148,158,90,90,165,57,163,159,123,171,95,157,106,247,117,115,50,83,163,74,29,83,125,215,77,161,17,218,233,207,121,39,60,42,56,221,219,179,181,13,31,41,102,230,129,73,33,36,25,84,237,103,137,171,210,60,90,67,221,89,156,94,189,145,143,167,7,245,35,135,217,237,71,93,230,184,250,227,240,83,207,33,102,253,187,248,53,112,90,89,203,162,140,27,85,57,40,166,29,31,181,87,227,214,25,237,240,241,31,19,244,98,164,146,12,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("04544653-713e-4c63-ac57-d9a457053d3c"));
		}

		#endregion

	}

	#endregion

}

