namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ImapFolderCollectionSchema

	/// <exclude/>
	public class ImapFolderCollectionSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ImapFolderCollectionSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ImapFolderCollectionSchema(ImapFolderCollectionSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("d8d1bb37-935d-4fda-ac61-6afb319a939d");
			Name = "ImapFolderCollection";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("80eb4b00-d20b-4335-a2cc-1f02c0e63f83");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,173,84,77,111,219,48,12,61,187,64,255,3,209,93,92,20,176,119,94,147,0,107,145,22,3,210,109,88,59,236,48,12,131,226,208,169,80,89,246,36,57,91,80,244,191,151,146,252,161,56,31,221,138,93,156,72,36,31,201,199,71,73,86,160,174,88,134,112,135,74,49,93,230,38,185,44,101,206,151,181,98,134,151,50,249,80,176,234,248,232,241,248,40,170,53,151,75,184,93,107,131,197,249,224,76,65,66,96,102,35,244,33,91,114,141,18,21,207,182,124,102,92,254,234,47,111,24,23,23,136,46,185,253,79,22,178,189,81,184,36,16,184,20,76,235,119,96,141,87,165,88,160,234,19,56,191,52,77,97,164,235,162,96,106,61,105,206,46,6,204,61,51,128,50,99,149,174,5,51,168,201,15,17,50,133,249,248,100,152,52,25,130,159,164,19,224,82,27,38,51,76,218,60,233,32,209,72,33,29,31,116,123,254,198,180,197,167,100,11,10,134,82,17,36,152,18,10,246,128,174,133,175,134,11,110,56,234,91,84,43,78,147,224,69,37,176,64,105,220,0,40,104,129,21,210,71,26,200,85,89,0,254,49,168,36,19,32,248,92,81,230,190,148,32,117,85,207,5,207,32,115,109,239,98,138,248,155,202,186,64,197,230,2,71,189,199,4,30,29,137,29,219,87,28,197,130,232,254,172,248,138,186,240,70,202,23,50,236,41,238,176,161,204,169,11,86,65,238,32,117,210,134,132,100,69,149,7,220,91,199,79,222,29,244,121,83,19,241,224,203,218,172,145,36,171,141,170,51,83,42,91,169,239,221,187,52,68,236,162,32,30,94,180,245,246,55,167,150,141,40,138,194,90,96,12,215,104,154,67,188,29,98,101,28,61,217,207,75,249,247,117,222,96,238,73,222,146,250,201,74,233,98,29,231,48,166,144,228,35,106,67,187,51,195,21,138,174,134,67,164,221,160,185,47,119,77,22,182,71,235,4,76,66,222,24,113,176,59,125,245,118,73,156,76,71,21,83,172,32,43,72,122,100,198,39,77,217,100,79,186,60,233,48,145,15,26,68,76,94,189,164,163,212,225,245,240,10,77,173,164,158,244,245,6,61,217,5,242,230,191,145,103,160,129,125,58,106,7,184,98,10,20,210,147,99,104,124,18,127,195,140,107,19,130,197,126,96,81,94,42,136,173,55,39,199,183,231,244,51,234,198,125,89,214,210,208,213,217,89,11,27,121,204,228,253,98,17,91,212,30,176,85,229,119,254,227,180,129,118,130,140,124,131,77,49,255,81,65,78,228,173,228,119,74,232,139,167,22,152,220,173,155,9,152,117,69,111,36,122,182,105,147,15,201,164,29,212,221,32,38,28,253,198,48,155,45,156,118,158,195,89,246,150,184,229,183,33,43,92,191,100,224,185,185,235,175,108,252,223,90,158,190,216,108,208,101,168,222,97,237,155,93,238,105,108,56,254,230,46,188,122,122,6,26,102,181,195,69,8,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("d8d1bb37-935d-4fda-ac61-6afb319a939d"));
		}

		#endregion

	}

	#endregion

}

