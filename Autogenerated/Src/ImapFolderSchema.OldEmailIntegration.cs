namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ImapFolderSchema

	/// <exclude/>
	public class ImapFolderSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ImapFolderSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ImapFolderSchema(ImapFolderSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("eb6e4d0a-2078-4a04-b0d1-baab2f4c081a");
			Name = "ImapFolder";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("80eb4b00-d20b-4335-a2cc-1f02c0e63f83");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,157,84,75,111,219,48,12,62,167,64,255,3,209,94,218,75,114,95,31,135,117,8,80,96,43,138,181,221,206,138,76,199,68,101,201,211,163,89,80,228,191,143,146,236,216,233,234,37,221,193,15,145,20,249,241,227,67,139,26,93,35,36,194,35,90,43,156,41,253,244,198,232,146,150,193,10,79,70,79,111,107,209,28,31,189,30,31,77,130,35,189,132,111,130,212,103,196,36,143,255,23,91,77,239,161,149,179,230,212,226,146,189,192,141,18,206,125,130,120,105,110,84,129,54,105,103,179,25,92,186,80,215,194,174,175,219,115,178,4,95,9,15,168,165,104,92,80,194,163,99,59,68,144,22,203,171,147,183,16,166,217,229,201,236,26,72,59,47,180,196,105,231,125,246,198,253,165,69,62,62,187,238,252,83,184,232,149,67,20,124,25,140,101,71,224,13,212,226,25,19,220,39,79,138,60,161,123,64,251,66,76,20,213,141,194,26,181,79,252,240,165,2,27,228,151,246,80,90,83,3,254,246,104,181,80,160,104,97,57,114,15,101,16,186,9,11,69,18,100,74,182,103,133,25,26,82,52,121,77,52,245,44,26,78,207,6,233,141,101,50,239,179,143,108,210,58,236,111,159,229,15,148,233,115,14,177,130,147,201,29,215,27,174,90,225,52,158,46,146,252,11,42,170,137,129,247,202,173,40,91,60,84,198,250,221,235,91,81,182,248,46,86,187,250,86,144,181,119,232,60,119,201,87,124,65,53,64,48,144,102,187,185,18,75,215,27,164,99,210,108,198,18,109,115,107,245,167,92,139,76,215,46,119,247,214,52,104,99,33,59,230,178,158,75,51,108,193,120,158,7,165,64,199,84,76,201,157,136,29,150,206,124,216,83,29,30,174,75,156,129,68,64,166,122,137,62,103,228,218,159,77,124,141,132,124,228,40,178,18,86,200,88,131,85,69,178,2,114,16,28,183,37,119,168,128,138,144,155,73,86,107,40,182,165,98,116,14,27,190,228,17,84,100,208,69,81,6,155,240,187,67,32,247,165,31,199,61,130,58,53,64,102,234,108,69,190,50,193,3,227,73,163,48,64,1,84,130,208,235,243,143,211,217,55,221,135,177,141,20,49,178,185,226,199,162,15,86,51,187,139,117,210,58,158,110,214,146,150,42,20,49,244,120,30,135,0,239,102,225,63,90,33,79,8,131,214,121,54,50,126,110,134,22,10,105,94,79,59,232,254,93,102,182,135,157,225,59,0,19,188,5,117,192,250,77,147,26,119,48,175,52,35,41,109,212,216,20,239,148,28,222,5,58,112,3,249,189,183,232,127,227,108,183,94,208,244,43,240,174,142,107,153,74,218,23,90,25,230,249,233,182,248,33,20,21,228,215,123,34,15,119,76,43,27,138,54,127,0,132,86,159,191,86,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("eb6e4d0a-2078-4a04-b0d1-baab2f4c081a"));
		}

		#endregion

	}

	#endregion

}

