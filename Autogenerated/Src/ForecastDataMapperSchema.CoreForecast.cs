namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: ForecastDataMapperSchema

	/// <exclude/>
	public class ForecastDataMapperSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public ForecastDataMapperSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public ForecastDataMapperSchema(ForecastDataMapperSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("5f49ba06-6712-4c2c-9ad3-21e060b91318");
			Name = "ForecastDataMapper";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("e0b9d996-6f7e-4520-a678-da960c79be39");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,173,87,221,111,219,54,16,127,118,129,254,15,156,11,180,50,102,208,192,30,151,216,195,230,124,204,93,211,6,177,209,151,97,8,88,137,78,8,72,162,74,74,9,130,34,255,251,142,199,79,73,118,186,1,125,81,204,251,226,221,241,238,119,151,154,85,92,55,44,231,100,199,149,98,90,238,91,186,150,245,94,220,117,138,181,66,214,244,66,42,158,51,221,126,254,229,245,171,111,175,95,77,58,45,234,59,178,125,210,45,175,78,6,103,80,45,75,158,27,61,77,47,121,205,149,200,71,50,31,68,253,53,18,211,107,171,74,214,192,1,222,98,177,32,167,186,171,42,166,158,86,238,124,173,228,131,40,184,38,21,111,239,101,161,73,43,73,197,26,178,119,14,146,130,181,140,122,229,69,162,221,116,95,74,145,147,188,100,90,19,31,207,25,72,95,177,166,225,10,36,76,96,147,55,138,223,129,231,4,226,215,45,171,91,253,43,220,41,30,88,203,209,167,73,99,15,36,55,124,162,91,133,254,43,206,63,74,112,107,203,27,6,41,147,138,44,201,244,246,246,252,236,242,252,246,118,106,195,153,188,225,117,97,173,187,179,187,234,202,134,114,228,162,7,41,10,114,33,202,18,210,218,85,245,103,86,118,92,103,155,152,228,211,29,251,82,114,203,93,129,95,230,175,158,147,27,249,72,148,124,156,163,115,40,98,130,221,64,242,137,128,207,140,96,184,19,147,56,150,223,147,44,177,226,140,16,225,127,105,47,125,68,252,94,148,69,148,166,107,115,86,188,14,90,147,7,166,72,139,26,188,44,33,55,53,127,36,187,112,246,82,19,107,111,13,153,4,25,180,74,241,240,51,36,115,10,95,111,31,104,115,175,115,169,100,215,120,149,99,252,77,17,185,155,34,240,44,25,239,73,168,55,60,151,170,64,30,36,16,56,142,241,124,226,126,160,211,185,141,196,72,152,179,254,205,171,211,11,161,116,251,73,157,241,61,235,202,54,3,9,27,245,138,184,159,244,26,122,66,194,13,244,252,107,199,74,157,5,207,102,196,91,153,188,125,27,196,109,90,18,113,231,241,108,230,61,18,123,146,161,67,63,65,110,187,178,156,121,51,33,233,20,11,7,28,206,10,9,157,192,103,121,32,6,35,174,121,67,149,209,223,139,34,11,22,252,101,207,248,7,191,207,253,82,29,87,218,37,111,71,196,204,85,166,175,14,197,219,78,213,182,36,70,6,92,105,36,143,65,119,114,139,93,151,205,220,139,141,222,107,238,178,184,102,141,105,16,71,199,152,156,202,70,99,89,120,13,123,114,188,52,3,174,84,63,8,221,158,134,122,93,101,54,189,182,30,48,17,105,22,28,38,0,196,84,168,98,226,216,20,217,101,39,138,191,255,33,128,15,28,80,101,83,64,139,26,18,81,206,123,159,14,243,148,81,136,44,221,131,250,76,184,108,121,173,36,27,39,241,93,176,223,68,113,205,84,107,66,136,230,12,172,231,172,205,76,80,224,204,55,111,230,217,105,59,235,54,4,250,94,138,58,27,99,219,220,155,158,157,36,69,240,125,116,67,0,182,204,30,180,67,145,0,142,223,115,4,114,44,55,15,59,180,135,224,86,203,56,81,145,26,70,214,114,106,192,126,186,218,129,106,31,255,79,23,40,21,149,108,92,122,21,81,147,200,61,120,192,225,42,197,247,203,105,2,103,211,197,234,116,225,21,240,97,237,228,56,10,185,224,63,204,144,132,164,179,116,190,160,75,254,253,204,195,64,152,78,110,92,94,214,164,127,204,128,182,14,1,234,189,76,176,25,67,93,15,0,218,92,208,32,188,244,49,209,66,14,253,8,121,163,55,188,41,97,218,103,83,50,157,27,100,245,157,141,85,99,186,110,153,248,56,132,51,102,128,140,33,198,122,60,138,247,5,68,50,85,108,77,13,234,119,226,46,136,19,192,198,19,102,64,10,213,206,233,4,155,93,80,241,198,200,9,205,62,142,56,10,185,201,116,60,241,67,172,79,18,97,208,16,71,103,15,8,29,108,58,195,40,116,44,182,195,83,168,255,78,135,0,110,28,219,78,180,101,136,106,163,255,20,61,19,120,142,220,243,66,216,174,138,234,79,13,55,206,44,195,34,132,235,142,166,94,212,58,110,197,188,33,195,187,234,249,234,41,46,29,61,4,114,72,18,211,151,98,197,11,237,15,104,227,48,192,148,55,150,227,143,131,129,84,201,65,204,64,47,2,207,255,70,144,225,236,250,79,56,50,84,10,104,50,100,28,192,20,251,48,132,28,71,166,193,246,230,192,103,43,59,149,163,225,94,27,140,92,25,161,144,27,220,1,123,224,220,7,30,215,219,7,167,190,153,248,174,113,70,219,108,88,90,113,97,77,123,172,231,238,176,3,135,149,22,37,251,147,121,248,143,4,18,204,124,214,7,54,142,60,62,240,94,201,202,15,36,179,226,209,96,236,229,122,68,97,40,172,68,243,197,82,140,243,217,43,217,185,252,78,251,209,125,188,30,127,104,137,109,206,235,174,226,202,16,147,117,199,134,224,151,170,209,30,67,250,8,111,234,0,158,209,144,109,232,184,91,253,241,100,247,211,165,181,70,253,206,54,163,91,110,60,205,238,84,131,107,180,145,248,254,42,56,92,174,210,173,202,91,162,127,241,167,3,43,98,202,62,188,241,5,137,157,52,157,225,183,189,89,56,247,118,37,19,235,177,61,200,210,224,243,47,213,225,235,42,98,15,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("5f49ba06-6712-4c2c-9ad3-21e060b91318"));
		}

		#endregion

	}

	#endregion

}

